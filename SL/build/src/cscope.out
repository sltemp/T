cscope 15 $HOME/Î∞îÌÉïÌôîÎ©¥/ch11_os/GNU/SLOS/build/src               0000050698
	@apps/task1_start.c

72 
	~"../c‹e/muãx.h
"

74 
	~"../hódîs/≠i_ty≥s.h
"

75 
	~"../devi˚s/ddf_io.h
"

76 
	~"../e7t/devi˚s/ddf_ty≥s.h
"

78 
	~"../e7t/evíts/swis.h
"

79 
	~"../hódîs/≠i_devi˚.h
"

81 
	#GREEN1
 0

	)

82 
	#RED
 2

	)

83 
	#ORANGE
 1

	)

84 
	#GREEN2
 3

	)

90 
devi˚_åì°r
 *
	gªd_ho°
;

91 
UID
 
	gæed
;

107 
BOOL
 
	$›íRedLED
()

109 
dñay
;

119 
ªd_ho°
 = 
	`evítIODevi˚O≥n
(&
æed
,
DEVICE_LED_E7T
,
RED
);

135 
æed
)

137 
DEVICE_IN_USE
:

138 
DEVICE_UNKNOWN
:

145  
FALSE
;

148  
TRUE
;

149 
	}
}

161 
	$swôchOnRedLED
()

162 {
	`evítIODevi˚WrôeBô
(
ªd_ho°
,
æed
,(
UINT
)1);
	}
}

174 
	$swôchOffRedLED
()

175 {
	`evítIODevi˚WrôeBô
(
ªd_ho°
,
æed
,(
UINT
)0);
	}
}

188 
	$C_E¡ryTask1
()

190 vﬁ©ûê
dñay
;

192 i‡(
	`›íRedLED
 ()==
TRUE
)

194 
	`swôchOnRedLED
 ();

197 
aWAIT
;

198 
	`swôchOnRedLED
 ();

201 
dñay
=0; delay<0x20ffff; delay++) {}

203 
aSIGNAL
;

204 
	`swôchOffRedLED
 ();

207 
dñay
=0; delay<0x20ffff; delay++) {}

217 
dñay
=0xBEEF0001;

219 
	}
}

	@apps/task1_start.h

101 
C_E¡ryTask1
();

	@apps/task2_start.c

72 
	~"../c‹e/muãx.h
"

74 
	~"../hódîs/≠i_ty≥s.h
"

75 
	~"../devi˚s/ddf_io.h
"

76 
	~"../e7t/devi˚s/ddf_ty≥s.h
"

78 
	~"../e7t/evíts/swis.h
"

79 
	~"../hódîs/≠i_devi˚.h
"

81 
	#GREEN1
 0

	)

82 
	#RED
 2

	)

83 
	#ORANGE
 1

	)

84 
	#GREEN2
 3

	)

90 
devi˚_åì°r
 *
	g‹™ge_ho°
;

91 
UID
 
	gﬁed
;

103 
BOOL
 
	$›íOøngeLED
 ()

112 
‹™ge_ho°
 = 
	`evítIODevi˚O≥n
(&
ﬁed
,
DEVICE_LED_E7T
,
ORANGE
);

116 i‡(
‹™ge_ho°
==0Ë{ 
FALSE
;}

120 
ﬁed
)

122 
DEVICE_IN_USE
:

123 
DEVICE_UNKNOWN
:

125  
FALSE
;

128  
TRUE
;

129 
	}
}

141 
	$swôchOnOøngeLED
 ()

142 {
	`evítIODevi˚WrôeBô
(
‹™ge_ho°
,
ﬁed
,(
UINT
)1);
	}
}

154 
	$swôchOffOøngeLED
 ()

155 {
	`evítIODevi˚WrôeBô
(
‹™ge_ho°
,
ﬁed
,(
UINT
)0);
	}
}

169 
	$C_E¡ryTask2
()

171 vﬁ©ûê
dñay
;

173 i‡(
	`›íOøngeLED
 ()==
TRUE
)

177 
bWAIT
;

178 
	`swôchOnOøngeLED
 ();

181 
dñay
=0; delay<0x10ffff; delay++) {}

183 
bSIGNAL
;

184 
	`swôchOffOøngeLED
 ();

187 
dñay
=0; delay<0x10ffff; delay++) {}

197 
dñay
=0xBEEF0002;

199 
	}
}

	@apps/task2_start.h

102 
C_E¡ryTask2
();

	@apps/task3_start.c

75 
	~"../c‹e/Æl.h
"

76 
	~"../c‹e/˛i_shñl.h
"

98 
	$b™√r
 ()

100 
	`¥ötToHo°
 ("\n\r");

101 
	`¥ötToHo°
 ("\n\rSimple Little OS (0.09)\n\r");

102 
	`¥ötToHo°
 ("- initialized ...... OK\n\r");

103 
	`¥ötToHo°
 ("-Ñunning on .......É7t \n\r");

104 
	`¥ötToHo°
 ("\n\r");

105 
	`¥ötToHo°
 ("\n\r");

106 
	}
}

121 
	$C_E¡ryTask3
()

123 vﬁ©ûê
dñay
;

133 if(
	`›íHo°
 (
COM0
)==
TRUE
)

135 
	`b™√r
 ();

136 
	`shñl
 ();

146 
	`˛o£Ho°
 ();

150 
dñay
=0xbeef003;

152 
	}
}

	@apps/task3_start.h

84 
C_TaskE¡ry3
();

	@core/all.h

72 #i‚de‡
_CORE_ALL


74 
	#_CORE_ALL
 1

	)

76 
	~"../hódîs/≠i_ty≥s.h
"

77 
	~"˛i_com.h
"

78 
	~"˛i_ªadlöe.h
"

79 
	~"../devi˚s/ddf_io.h
"

80 
	~<as£π.h
>

81 
	~<time.h
>

85 
	~"../≠ps/èsk1_°¨t.h
"

89 
	~"˛i_com.h
"

93 
	~"../e7t/hódîs/Æl.h
"

94 
	~"../hódîs/≠i_devi˚.h
"

95 
	~"../hódîs/≠i_Œdebug.h
"

	@core/cinit.c

75 
	~"Æl.h
"

76 
	~"../e7t/evíts/evít_öô.h
"

84 
	#DEVICESINIT
 1

	)

85 
	#SERVICESINIT
 2

	)

86 
	#TICKINIT
 3

	)

87 
	#CINITINIT
 4

	)

88 
	#TICKSTART
 5

	)

89 
	#ENTERTASK
 6

	)

91 
	#LOW_LEVEL_INITIALIZATION
 1

	)

92 
	#BOOT_SLOS
 2

	)

104 
	gSTATE
;

120 
	$cöô_öô
()

123 
STATE
 = 
LOW_LEVEL_INITIALIZATION
;

135 
	`Œåa˚
(
	`evítIODevi˚Inô
(),
DEVICESINIT
);

145 
	`Œåa˚
(
	`evítSîvi˚sInô
(),
SERVICESINIT
);

154 
	`Œåa˚
(
	`evítTickInô
(2),
TICKINIT
);

155 
	}
}

167 
	$C_E¡ry
()

183 
	`Œåa˚
(
	`cöô_öô
(),
CINITINIT
);

193 
	`Œåa˚
(
	`evítTickSèπ
(),
TICKSTART
);

202 
STATE
=
BOOT_SLOS
;

204 
asm
 volatile ("MSR CPSR_c,#0x50");

213 
	`Œåa˚
(
	`C_E¡ryTask1
(),
ENTERTASK
);

223 
	}
}

	@core/cli_com.c

73 
	~<°d¨g.h
>

75 
	~"Æl.h
"

76 
	~"˛i_£rül.h
"

82 
	gcomm™d_löe
[256];

83 *
	gªp‹t_buff
;

84 
	ggpbuff
[256];

85 *
	gîr‹_buff
;

93 
f‹m©Såög
(c⁄° *
fmt
, (*
putc
)(), 
va_li°
 
¨gs
);

105 
	$wrôeC
(
c
)

107 
	`wrôeCh¨ToHo°
(()
c
);

108 
	}
}

120 
	$ªadC
()

122  ()
	`ªadCh¨FromHo°
();

123 
	}
}

135 
	$ªp‹tC
(
c
)

137 *
ªp‹t_buff
++ = 
c
;

138 
	}
}

150 
öã∫Æ_wrôe_dec
(
w
, (*
putc
)())

152 i‡(
w
 >10Ë
	`öã∫Æ_wrôe_dec
(w / 10, 
putc
);

153 
	`putc
(
w
 % 10 + '0');

154 
	}
}

162 c⁄° 
	gdigôs
[] = "0123456789abcdef";

175 
öã∫Æ_wrôe_hex
(
w
, (*
putc
)())

177 
i
;

179 
i
 = 0; i < 8; i++)

181 
	`putc
(
digôs
[
w
 >> 28]);

182 
w
 <<= 4;

184 
	}
}

196 
	$wrôe0
(*
s
)

198 
c
;

200 
c
 = *
s
++;

202 
c
)

204 
	`wrôeC
(
c
);

205 
c
 = *
s
++;

207 
	}
}

219 
	$√wLöe
()

221 
	`wrôeC
('\r');

222 
	`wrôeC
('\n');

223 
	}
}

235 
	$wrôeHex
(
w
)

237 
	`öã∫Æ_wrôe_hex
(
w
, 
wrôeC
);

238 
	}
}

250 
	$wrôeDec
(
w
)

252 
	`öã∫Æ_wrôe_dec
(
w
, 
wrôeC
);

253 
	}
}

265 
	$¥ëtyC
(
c
)

267 
n
;

269 i‡(
c
 == '\t')

273 
	`wrôeC
(' ');

274 } ++
n
 & 7);

278 i‡(
c
 == '\n')

280 
n
 = 0;

281 
	`wrôeC
('\r');

284 i‡(
c
 >0x20Ë
n
++; 
	`wrôeC
(c);

285 
	}
}

297 
	$¥ëtyPröt
(c⁄° *
fmt
, ...)

299 
va_li°
 
≠
;

301 
	`va_°¨t
(
≠
, 
fmt
);

302 
	`f‹m©Såög
(
fmt
, 
¥ëtyC
, 
≠
);

303 
	`¥ëtyC
('\n');

304 
	`va_íd
(
≠
);

305 
	}
}

319 
f‹m©Såög
(c⁄° *
fmt
, (*
putc
)(), 
va_li°
 
¨gs
)

321 
c
;

323 
c
 = *
fmt
++;

325 
c
)

327 i‡(
c
 != '%')

329 
	`putc
(
c
);

333 
c
 = *
fmt
++;

335 
c
)

337 'd': 
	`öã∫Æ_wrôe_dec
(
	`va_¨g
(
¨gs
, ), 
putc
); ;

338 'x': 
	`öã∫Æ_wrôe_hex
(
	`va_¨g
(
¨gs
, ), 
putc
); ;

341 
max_°rög
 = –
comm™d_löe
 );

342 *
s
 = 
	`va_¨g
(
¨gs
, *);

344 
c
 = *
s
++;

346  
c
 && (
max_°rög
-- > 0))

348 
	`putc
(
c
);

349 
c
=*
s
++;

356 
fmt
--;

359 
	`putc
(
c
);

362 
c
 = *
fmt
++;

364 
	}
}

376 
CÆlBack
 
	$h™dÀRï‹ãdEº‹
()

379 
	}
}

391 
CÆlBack
 
	$ªp‹tOK
()

394 
	}
}

407 
CÆlBack
 
	$ªp‹tEº‹
(
î∫o
, c⁄° *
fmt
, ...)

409 
va_li°
 
≠
;

411 
	`va_°¨t
(
≠
, 
fmt
);

412 
ªp‹t_buff
 = 
gpbuff
;

413 *(*)
ªp‹t_buff
 = 
î∫o
;

414 
ªp‹t_buff
 += 4;

415 
	`f‹m©Såög
(
fmt
, 
ªp‹tC
, 
≠
);

416 
	`ªp‹tC
(0);

417 
	`va_íd
(
≠
);

418 
îr‹_buff
 = 
gpbuff
;

419  
	`h™dÀRï‹ãdEº‹
();

420 
	}
}

432 
CÆlBack
 
	$CLI
(*
cmd
)

439  
	`ªp‹tOK
();

440 
	}
}

	@core/cli_com.h

72 
comm™d_löe
[256];

88 
wrôeC
(
c
);

100 
ªadC
();

112 
ªp‹tC
(
c
);

124 
wrôe0
(*
s
);

136 
√wLöe
();

148 
wrôeHex
(
w
);

160 
wrôeDec
(
w
);

172 
¥ëtyC
(
c
);

184 
¥ëtyPröt
(c⁄° *
fmt
, ...);

196 
CÆlBack
 
h™dÀRï‹ãdEº‹
();

208 
CÆlBack
 
ªp‹tOK
();

221 
CÆlBack
 
ªp‹tEº‹
(
î∫o
, c⁄° *
fmt
, ...);

233 
CÆlBack
 
CLI
(*
cmd
);

	@core/cli_readline.c

72 
	~"Æl.h
"

74 
	#START
 ('A'-'@')

	)

75 
	#BACK
 ('B'-'@')

	)

76 
	#ERASE_FWD
 ('D'-'@')

	)

77 
	#END
 ('E'-'@')

	)

78 
	#FORWARD
 ('F'-'@')

	)

79 
	#ERASE
 ('H'-'@')

	)

80 
	#ERASE_EOL
 ('K'-'@')

	)

81 
	#ENTER
 ('M'-'@')

	)

82 
	#REDRAW
 ('R'-'@')

	)

83 
	#ERASE_LINE
 ('U'-'@')

	)

84 
	#ERASE_SOL
 ('W'-'@')

	)

86 
	#BACKSPACE
 ('H'-'@')

	)

87 
	#DELETE
 (0x7f)

	)

88 
	#LF
 ('\n')

	)

89 
	#CR
 ('\r')

	)

90 
	#CTRL_D
 ('D'-'@')

	)

92 
ªadC
();

93 
wrôeC
(
c
);

99 
	$x°æí
 (*
p
)

101 
n
=0;

103 *
p
++!=0Ë
n
++;

105  (
n
);

106 
	}
}

108 
	$x°r˝y
 (*
s
, *
t
)

110 (*
s
++ = *
t
++))

112 
	}
}

114 
	$xmemmove
(*
s
, *
t
,
n
)

116 
n
--Ë*
s
++ = *
t
++;

117 
	}
}

130 
	$back•a˚
 (
n
)

132 
n
--Ë
	`wrôeC
(
BACKSPACE
);

133 
	}
}

146 
	$backup
(*
buf„r
, 
pos
)

148 
	`back•a˚
(
	`x°æí
(&
buf„r
[
pos
]));

149 
	}
}

162 
	$ªdøw_eﬁ
 (*
buf„r
, 
pos
)

164 
c
;

166 
c
 = 
buf„r
[
pos
++];

168 
c
)

170 
	`wrôeC
(
c
);

171 
c
 = 
buf„r
[
pos
++];

173 
	}
}

187 
	$ªdøw_löe
(*
¥om±
, *
buf„r
, 
pos
)

189 
c
;

191 
	`wrôeC
(
CR
);

193 
c
 = *
¥om±
++;

195 
c
)

197 
	`wrôeC
(
c
);

198 
c
 = *
¥om±
++;

201 
	`ªdøw_eﬁ
(
buf„r
, 0);

202 
	`backup
(
buf„r
, 
pos
);

203 
	}
}

216 
	$dñëe
 (*
buf„r
, 
pos
)

218 i‡(
buf„r
[
pos
] == 0) ;

220 
	`x°r˝y
(&
buf„r
[
pos
], &buffer[pos+1]);

221 
	`ªdøw_eﬁ
(
buf„r
, 
pos
);

222 
	`wrôeC
(' ');

223 
	`wrôeC
(
BACKSPACE
);

224 
	`backup
(
buf„r
, 
pos
);

227 
	}
}

241 
	$ö£π
 (*
buf„r
, 
pos
, 
c
)

243 *
s
 = &
buf„r
[
pos
];

245 
	`xmemmove
(
s
+1, s, 
	`x°æí
(s)+1);

246 
buf„r
[
pos
] = 
c
;

247 
	`ªdøw_eﬁ
(
buf„r
, 
pos
);

248 
pos
++;

249 
	`backup
(
buf„r
, 
pos
);

251  
pos
;

252 
	}
}

265 
	$RódLöeZ
 (*
buf„r
,
maxÀn
)

267 
pos
 = 0;

268 
c
;

272 
c
=
	`ªadC
();

274 i‡(
c
 =
CR
 || c =
LF
)

276 
buf„r
[
pos
] = 0;

277  
pos
;

280 i‡(
c
 =
CTRL_D
)

282 
buf„r
[0] = 0;

286 i‡(
c
 >' ' && 
pos
 < 
maxÀn
)

287 
buf„r
[
pos
++] = 
c
;

289 
	}
}

304 
	$ªadLöe
 (*
¥om±
, *
buf„r
, 
maxÀn
)

306 
i
;

307 
pos
 = 0;

308 
c
;

310 *
buf„r
 = 0;

311 
	`wrôe0
(
¥om±
);

315 
c
 = 
	`ªadC
();

316 i‡(
c
 =
DELETE
Ë¯
ERASE
;

317 i‡(
c
 < ' ')

319 
c
)

321 
START
:

322 
	`back•a˚
(
pos
);

323 
pos
 = 0;

325 
BACK
:

326 i‡(
pos
 > 0)

328 
	`wrôeC
(
BACKSPACE
);

329 
pos
--;

332 
ERASE_FWD
:

333 i‡(
	`x°æí
(
buf„r
) == 0)

335 
	`wrôe0
("*EOF*\r\n");

338 
	`dñëe
(
buf„r
, 
pos
);

340 
END
:

341 
	`ªdøw_eﬁ
(
buf„r
, 
pos
);

342 
pos
 = 
	`x°æí
(
buf„r
);

344 
FORWARD
:

345 i‡(
buf„r
[
pos
])

347 
	`wrôeC
(
buf„r
[
pos
]);

348 
pos
++;

351 
ERASE
:

352 i‡(
pos
 > 0)

354 
	`wrôeC
(
BACKSPACE
);

355 
pos
--;

356 
	`dñëe
(
buf„r
, 
pos
);

359 
ENTER
:

360 
	`wrôeC
(
CR
);

361 
	`wrôeC
(
LF
);

362  
	`x°æí
(
buf„r
);

363 
REDRAW
:

364 
	`wrôeC
(
LF
);

365 
	`ªdøw_löe
(
¥om±
, 
buf„r
, 
pos
);

367 
ERASE_LINE
:

368 
	`back•a˚
(
pos
);

369 
i
 = 
pos
 = 
	`x°æí
(
buf„r
);

371 
i
--Ë
	`wrôeC
(' ');

373 
	`back•a˚
(
pos
);

374 
pos
 = 0;

375 
buf„r
[0] = 0;

378 } i‡(
	`x°æí
(
buf„r
Ë< 
maxÀn
)

379 
pos
 = 
	`ö£π
(
buf„r
,Öos, 
c
);

381 
	}
}

	@core/cli_readline.h

81 
ªadLöe
(*
¥om±
, *
buf„r
, 
maxÀn
);

	@core/cli_serial.c

72 
	~"../hódîs/≠i_ty≥s.h
"

73 
	~"../devi˚s/ddf_io.h
"

74 
	~"../e7t/devi˚s/ddf_ty≥s.h
"

76 
	~"../e7t/evíts/swis.h
"

77 
	~"../hódîs/≠i_devi˚.h
"

83 
devi˚_åì°r
 *
	gho°
;

84 
UID
 
	g£rül
;

101 
BOOL
 
	$›íHo°
(
UINT
 
com
)

109 i‡(
com
>1Ë{ 
FALSE
;}

111 
ho°
 = 
	`evítIODevi˚O≥n
(&
£rül
,
DEVICE_SERIAL_E7T
,
com
);

115 i‡(
ho°
==0Ë{ 
FALSE
;}

119 
£rül
)

121 
DEVICE_IN_USE
:

122 
DEVICE_UNKNOWN
:

124  
FALSE
;

127  
TRUE
;

128 
	}
}

140 
	$wrôeCh¨ToHo°
(
c
)

142 
	`evítIODevi˚WrôeByã
(
ho°
,
£rül
,(
UINT
)
c
);

143 
	}
}

155 
	$¥ötToHo°
(*
s
)

157 *
s
!=0)

159 
	`wrôeCh¨ToHo°
 (*
s
++);

161 
	}
}

173 
	$ªadCh¨FromHo°
()

175  ()
	`evítIODevi˚RódByã
(
ho°
,
£rül
);

176 
	}
}

189 
	$˛o£Ho°
()

191 i‡(
ho°
==0Ë 
FALSE
;

193  
	`evítIODevi˚Clo£
(
ho°
,
£rül
);

194 
	}
}

	@core/cli_serial.h

79 
BOOL
 
›íHo°
 (
UINT
 
COM
);

91 
wrôeCh¨ToHo°
 (
c
);

103 
¥ötToHo°
 (*
s
);

115 
ªadCh¨FromHo°
 ();

128 
˛o£Ho°
 ();

	@core/cli_shell.c

71 
	~"Æl.h
"

72 
	~"˛i_ªadlöe.h
"

88 
	$shñl
()

90 
CÆlBack
 
cb
;

91 
Àn
;

95 
Àn
 = 
	`ªadLöe
("e7t: ", 
comm™d_löe
, 255);

96 
cb
 = 
	`CLI
(
comm™d_löe
);

97 } !
cb
);

98 
	}
}

	@core/cli_shell.h

72 
	~"˛i_£rül.h
"

88 
shñl
();

	@core/mutex.c

86 vﬁ©ûê
	g£m≠h‹e
 = 2;

102 
	$muãx_g©ñock
 ()

104 
£maAddr
 = (Ë&
£m≠h‹e
;

106 
asm
 volatile

115 : "r" (
£maAddr
)

117 
	}
}

129 
	$muãx_g©eu∆ock
 ()

131 
£maAddr
 = (Ë&
£m≠h‹e
;

133 
asm
 volatile

139 : "r" (
£maAddr
)

141 
	}
}

	@core/mutex.h

76 
	#aWAIT
 
£m≠h‹e
==1Ë{} 
	`muãx_g©ñock
();

	)

77 
	#aSIGNAL
 
	`muãx_g©eu∆ock
();

	)

79 
	#bWAIT
 
£m≠h‹e
==1||£m≠h‹e==2Ë{} \

	)

80 
muãx_g©ñock
();

82 
	#bSIGNAL
 
	`muãx_g©eu∆ock
();

	)

88 vﬁ©ûê
£m≠h‹e
;

100 
muãx_g©ñock
 ();

112 
muãx_g©eu∆ock
 ();

	@core/swiapi.c

2 
	~"../e7t/evíts/swis.h
"

3 
	~"../devi˚s/ddf_‰ame.h
"

5 
	#UINT
 

	)

9 
	mr
[4];

10 } 
	tªgi°î°r
;

12 
ªgi°î°r
 
	grs
;

14 
c‹eCÆlSWI
 (
ªgi°î°r
 *
r
);

32 
	$evítIODevi˚Inô
()

34 
ªgi°î°r
 
tmpReg
;

36 
tmpReg
.
r
[0] = 
Evít_IODevi˚Inô
;

37 
tmpReg
.
r
[1] = 0;

38 
tmpReg
.
r
[2] = 0;

39 
tmpReg
.
r
[3] = 0;

41 
	`c‹eCÆlSWI
 (&
tmpReg
);

43 i‡(
tmpReg
.
r
[0]!=1 ||ÅmpReg.r[1]!=2) { 999);}

44 
	}
}

67 
devi˚_åì°r
 *
	$evítIODevi˚O≥n
(
UID
 *
a
, 
UINT
 
b
, UINT 
c
)

69 
ªgi°î°r
 
tmpReg
;

71 
tmpReg
.
r
[0] = 
Evít_IODevi˚O≥n
;

72 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

73 
tmpReg
.
r
[2] = 
b
;

74 
tmpReg
.
r
[3] = 
c
;

76 
	`c‹eCÆlSWI
(&
tmpReg
);

78  (
devi˚_åì°r
 *)
tmpReg
.
r
[0];

79 
	}
}

99 
	$evítIODevi˚Clo£
(
devi˚_åì°r
 *
a
, 
UID
 
b
)

101 
ªgi°î°r
 
tmpReg
;

103 
tmpReg
.
r
[0] = 
Evít_IODevi˚Clo£
;

104 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

105 
tmpReg
.
r
[2] = 
b
;

106 
tmpReg
.
r
[3] = 0;

108 
	`c‹eCÆlSWI
(&
tmpReg
);

110  (Ë
tmpReg
.
r
[0];

111 
	}
}

127 
	$evítIODevi˚WrôeByã
(
UINT
 
a
,UINT 
b
, UINT 
c
)

129 
ªgi°î°r
 
tmpReg
;

131 
tmpReg
.
r
[0] = 
Evít_IODevi˚WrôeByã
;

132 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

133 
tmpReg
.
r
[2] = 
b
;

134 
tmpReg
.
r
[3] = 
c
;

136 
	`c‹eCÆlSWI
(&
tmpReg
);

137 
	}
}

152 
UINT
 
	$evítIODevi˚RódByã
(
devi˚_åì°r
 *
a
, 
UID
 
b
)

154 
ªgi°î°r
 
tmpReg
;

156 
tmpReg
.
r
[0] = 
Evít_IODevi˚RódByã
;

157 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

158 
tmpReg
.
r
[2] = 
b
;

159 
tmpReg
.
r
[3] = 0;

161 
	`c‹eCÆlSWI
(&
tmpReg
);

163  (
UINT
Ë
tmpReg
.
r
[0];

164 
	}
}

180 
	$evítIODevi˚WrôeBô
(
devi˚_åì°r
 *
a
, 
UID
 
b
, 
UINT
 
c
)

182 
ªgi°î°r
 
tmpReg
;

184 
tmpReg
.
r
[0] = 
Evít_IODevi˚WrôeBô
;

185 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

186 
tmpReg
.
r
[2] = 
b
;

187 
tmpReg
.
r
[3] = 
c
;

189 
	`c‹eCÆlSWI
(&
tmpReg
);

190 
	}
}

205 
UINT
 
	$evítIODevi˚RódBô
(
devi˚_åì°r
 *
a
, 
UID
 
b
)

207 
ªgi°î°r
 
tmpReg
;

209 
tmpReg
.
r
[0] = 
Evít_IODevi˚RódBô
;

210 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

211 
tmpReg
.
r
[2] = 
b
;

212 
tmpReg
.
r
[3] = 0;

214 
	`c‹eCÆlSWI
(&
tmpReg
);

216  (
UINT
Ë
tmpReg
.
r
[0];

217 
	}
}

232 
	$evítIODevi˚WrôeBlock
(
devi˚_åì°r
 *
a
, 
UID
 
b
, *
c
)

234 
ªgi°î°r
 
tmpReg
;

236 
tmpReg
.
r
[0] = 
Evít_IODevi˚WrôeBlock
;

237 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

238 
tmpReg
.
r
[2] = 
b
;

239 
tmpReg
.
r
[3] = (
UINT
Ë
c
;

241 
	`c‹eCÆlSWI
(&
tmpReg
);

242 
	}
}

257 *
	$evítIODevi˚RódBlock
(
devi˚_åì°r
 *
a
, 
UID
 
b
)

259 
ªgi°î°r
 
tmpReg
;

261 
tmpReg
.
r
[0] = 
Evít_IODevi˚RódBlock
;

262 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

263 
tmpReg
.
r
[2] = 
b
;

264 
tmpReg
.
r
[3] = 0;

266 
	`c‹eCÆlSWI
(&
tmpReg
);

268  (*)
tmpReg
.
r
[0];

269 
	}
}

271 
	$brögUpTø˚
(
UINT
 
a
, 
UID
 
b
)

273 
ªgi°î°r
 
tmpReg
;

275 
tmpReg
.
r
[0] = 
BrögUp_Tø˚
;

276 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

277 
tmpReg
.
r
[2] = 
b
;

278 
tmpReg
.
r
[3] = 0;

280 
	`c‹eCÆlSWI
(&
tmpReg
);

281 
	}
}

295 
	$brögUpF©ÆEº‹
(
UID
 
a
)

297 
ªgi°î°r
 
tmpReg
;

299 
tmpReg
.
r
[0] = 
BrögUp_F©ÆEº‹
;

300 
tmpReg
.
r
[1] = (
UINT
Ë
a
;

301 
tmpReg
.
r
[2] = 0;

302 
tmpReg
.
r
[3] = 0;

304 
	`c‹eCÆlSWI
(&
tmpReg
);

305 
	}
}

	@core/uid.c

72 
	g√w_uid
 = 1;

74 #i‚de‡
UID


75 
	#UID
 

	)

94 
UID
 
	$uid_gíî©e
()

96  ++
√w_uid
;

97 
	}
}

	@core/uid.h

72 
	~"../hódîs/≠i_ty≥s.h
"

78 
	#NONE
 0

	)

102 
UID
 
uid_gíî©e
();

	@devices/ddf_frame.h

76 
	~"../c‹e/uid.h
"

96 
	sd©a
 {

97 
	msize
;

98 *
	md©a
;

99 } 
	tblock_d©a°r
;

109 
	sdevi˚_åì
 {

118 
	m«me
[12];

127 
UID
 
	mdrivî_id
;

137 (*
	möô
) ();

151 
UID
 (*
›í
) (, );

164 (*
	m˛o£
Ë(
	mUID
);

181 (*
	mbyã
Ë(
	mUID
, 
	mBYTE
);

191 (*
	mbô
Ë(
	mUID
, 
	mBYTE
);

201 (*
	mblock
Ë(
	mUID
, 
	mblock_d©a°r
 *);

203 } 
	mwrôe
;

221 
BYTE
 (*
byã
Ë(
	mUID
);

232 
BYTE
 (*
bô
Ë(
	mUID
);

242 
	mblock_d©a°r
 *(*
	mblock
Ë(
	mUID
);

244 } 
	mªad
;

246 } 
	tdevi˚_åì°r
 ;

248 
devi˚_åì°r
 
devi˚s
[];

	@devices/ddf_io.c

73 
	~"../e7t/devi˚s/ddf_åì.h
"

89 
	$ioInôülizeDrivîs
()

91 
devi˚_åì°r
 *
drivî
 = 
devi˚s
;

93 *
drivî
->
öô
 != 0)

95 
drivî
->
	`öô
();

96 
drivî
 ++;

98 
	}
}

112 
devi˚_åì°r
 *
	$ioO≥nDrivî
(*
id
,
maj‹
,
mö‹
)

114 
devi˚_åì°r
 *
drivî
 = 
devi˚s
;

116 *
drivî
->
öô
 != 0)

118 *
id
 = 
drivî
->
	`›í
(
maj‹
,
mö‹
);

120 i‡(*
id
>0)

122  
drivî
;

125 
drivî
 ++;

128  (
devi˚_åì°r
 *)0;

129 
	}
}

142 
	$ioClo£Drivî
(
devi˚_åì°r
 *
d
, 
UID
 
id
)

144 i‡(
d
==(
devi˚_åì°r
 *)0) { -2;}

146  
d
->
	`˛o£
(
id
);

147 
	}
}

161 
	$ioWrôeBô
(
devi˚_åì°r
 *
d
,
UID
 
id
,
BYTE
 
bô
)

163 i‡(
d
==(
devi˚_åì°r
 *)0) {;}

165 
d
->
wrôe
.
	`bô
(
id
,
bô
);

166 
	}
}

180 
BYTE
 
	$ioRódBô
(
devi˚_åì°r
 *
d
,
UID
 
id
)

182 i‡(
d
==(
devi˚_åì°r
 *)0) { 255;}

184  
d
->
ªad
.
	`bô
(
id
);

185 
	}
}

199 
	$ioWrôeByã
(
devi˚_åì°r
 *
d
,
UID
 
id
,
BYTE
 
byã
)

201 i‡(
d
==(
devi˚_åì°r
 *)0) {;}

203 
d
->
wrôe
.
	`byã
(
id
,
byã
);

204 
	}
}

217 
BYTE
 
	$ioRódByã
(
devi˚_åì°r
 *
d
,
UID
 
id
)

219 i‡(
d
==(
devi˚_åì°r
 *)0) { 255;}

221  
d
->
ªad
.
	`byã
(
id
);

222 
	}
}

236 
	$ioWrôeBlock
(
devi˚_åì°r
 *
d
,
UID
 
id
, 
block_d©a°r
 *
block
)

238 i‡(
d
==(
devi˚_åì°r
 *)0) {;}

240 
d
->
wrôe
.
	`block
(
id
,
block
);

241 
	}
}

254 
block_d©a°r
 *
	$ioRódBlock
 (
devi˚_åì°r
 *
d
,
UID
 
id
)

256 i‡(
d
==(
devi˚_åì°r
 *)0) { 0;}

258  
d
->
ªad
.
	`block
(
id
);

259 
	}
}

	@devices/ddf_io.h

72 
	~"ddf_‰ame.h
"

88 
ioInôülizeDrivîs
();

102 
devi˚_åì°r
 *
ioO≥nDrivî
(*
id
,
maj‹
,
mö‹
);

115 
ioClo£Drivî
(
devi˚_åì°r
 *
d
, 
UID
 
id
);

129 
ioWrôeBô
(
devi˚_åì°r
 *
d
,
UID
 
id
,
BYTE
 
bô
);

143 
BYTE
 
ioRódBô
(
devi˚_åì°r
 *
d
,
UID
 
id
);

157 
ioWrôeByã
(
devi˚_åì°r
 *
d
,
UID
 
id
,
BYTE
 
byã
);

170 
BYTE
 
ioRódByã
(
devi˚_åì°r
 *
d
,
UID
 
id
);

184 
ioWrôeBlock
(
devi˚_åì°r
 *
d
,
UID
 
id
, 
block_d©a°r
 *
block
);

197 
block_d©a°r
 *
ioRódBlock
(
devi˚_åì°r
 *
d
,
UID
 
id
);

	@e7t/devices/ddf_tree.h

72 
	~"../../devi˚s/ddf_‰ame.h
"

73 
	~"../devi˚s/Àd_drivî.h
"

74 
	~"../devi˚s/£gmít_drivî.h
"

75 
	~"../devi˚s/£rül_drivî.h
"

81 
	~"../devi˚s/ddf_ty≥s.h
"

93 
devi˚_åì°r
 
	gdevi˚s
[] =

103 
DEVICE_LED_E7T
,

104 
Àd_öô
,

105 
Àd_›í
,

106 
Àd_˛o£
,

107 {
Àd_wrôe_bô
},

108 {
Àd_ªad_bô
}

119 
DEVICE_SEGMENT_E7T
,

120 
£gmít_öô
,

121 
£gmít_›í
,

122 
£gmít_˛o£
,

123 {
£gmít_wrôe_byã
},

124 {
£gmít_ªad_byã
}

134 
DEVICE_SERIAL_E7T
,

135 
£rül_öô
,

136 
£rül_›í
,

137 
£rül_˛o£
,

138 {
£rül_wrôe_byã
},

139 {
£rül_ªad_byã
}

	@e7t/devices/ddf_types.h

68 #i‚de‡
_DEVICE_DDF_E7T_TYPES


70 
	#_DEVICE_DDF_E7T_TYPES
 1

	)

72 
	#DEVICE_LED_E7T
 55075

	)

73 
	#DEVICE_SEGMENT_E7T
 55090

	)

74 
	#DEVICE_SERIAL_E7T
 55095

	)

	@e7t/devices/led_driver.c

75 
	~"../../devi˚s/ddf_‰ame.h
"

76 
	~"Àd_drivî.h
"

84 #i‚de‡
SYSCFG


85 
	#SYSCFG
 0x03ff0000

	)

90 
	#IOPMOD
 (vﬁ©ûê*)(
SYSCFG
 + 0x5000)

	)

91 
	#IOPDATA
 (vﬁ©ûê*)(
SYSCFG
 + 0x5008)

	)

92 
	#LEDBANK
 *
IOPDATA


	)

96 
	#LED_4_ON
 (
LEDBANK
=LEDBANK|0x00000010)

	)

97 
	#LED_3_ON
 (
LEDBANK
=LEDBANK|0x00000020)

	)

98 
	#LED_2_ON
 (
LEDBANK
=LEDBANK|0x00000040)

	)

99 
	#LED_1_ON
 (
LEDBANK
=LEDBANK|0x00000080)

	)

103 
	#LED_4_OFF
 (
LEDBANK
=LEDBANK&~0x00000010)

	)

104 
	#LED_3_OFF
 (
LEDBANK
=LEDBANK&~0x00000020)

	)

105 
	#LED_2_OFF
 (
LEDBANK
=LEDBANK&~0x00000040)

	)

106 
	#LED_1_OFF
 (
LEDBANK
=LEDBANK&~0x00000080)

	)

114 
	mÀd
[4];

115 
	muid
[4];

116 } 
	töã∫Æ_Àd°r
;

122 
öã∫Æ_Àd°r
 
	gdiodes
;

136 
	$Àd_öô
()

138 *
IOPMOD
 = 0xf0;

139 *
IOPDATA
 = 0x50;

143 
LED_4_OFF
;

144 
LED_3_OFF
;

145 
LED_2_OFF
;

146 
LED_1_OFF
;

150 
diodes
.
Àd
 [
GREEN1
] = 
OFF
;

151 
diodes
.
Àd
 [
RED
] = 
OFF
;

152 
diodes
.
Àd
 [
ORANGE
] = 
OFF
;

153 
diodes
.
Àd
 [
GREEN2
] = 
OFF
;

155 
diodes
.
uid
 [
GREEN1
] = 
NONE
;

156 
diodes
.
uid
 [
RED
] = 
NONE
;

157 
diodes
.
uid
 [
ORANGE
] = 
NONE
;

158 
diodes
.
uid
 [
GREEN2
] = 
NONE
;

160 
	}
}

173 
UID
 
	$Àd_›í
(
maj‹
,
mö‹
)

176 i‡(
maj‹
==
DEVICE_LED_E7T
)

178 i‡(
mö‹
 <4)

180 i‡(
diodes
.
uid
[
mö‹
]==
NONE
)

182 
diodes
.
uid
[
mö‹
] = 
	`uid_gíî©e
();

183  
diodes
.
uid
[
mö‹
];

187  
DEVICE_IN_USE
;

192  
DEVICE_UNKNOWN
;

196  
DEVICE_NEXT
;

197 
	}
}

213 
	$Àd_˛o£
(
UID
 
id
)

215 
x
;

217 
x
=0;x<=3;x++)

219 i‡(
diodes
.
uid
[
x
]==
id
)

221 
diodes
.
uid
 [
x
] = 
NONE
;

222  
DEVICE_SUCCESS
;

226  
DEVICE_UNKNOWN
;

227 
	}
}

241 
	$Àd_wrôe_bô
(
UID
 
id
,
BYTE
 
Àd_£t
)

243 
x
;

245 
x
=0;x<=3;x++)

247 i‡(
diodes
.
uid
[
x
]==
id
)

249 i‡(
diodes
.
uid
[
x
]!=
NONE
)

251 
Àd_£t
 &= 1;

253 
diodes
.
Àd
 [
x
] = 
Àd_£t
;

255 i‡(
Àd_£t
==
ON
)

257 
x
)

259 
GREEN2
 : 
LED_4_ON
; ;

260 
RED
 : 
LED_2_ON
; ;

261 
ORANGE
 : 
LED_3_ON
; ;

262 
GREEN1
 : 
LED_1_ON
; ;

267 
x
)

269 
GREEN2
 : 
LED_4_OFF
; ;

270 
RED
 : 
LED_2_OFF
; ;

271 
ORANGE
 : 
LED_3_OFF
; ;

272 
GREEN1
 : 
LED_1_OFF
; ;

278 
	}
}

290 
BYTE
 
	$Àd_ªad_bô
(
UID
 
id
)

292 
x
;

294 
x
=0;x<=3;x++)

296 i‡(
diodes
.
uid
[
x
]==
id
)

298 i‡(
diodes
.
uid
[
x
]!=
NONE
)

300  
diodes
.
Àd
 [
x
];

310 
	}
}

	@e7t/devices/led_driver.h

69 #i‚de‡
_DEVICE_E7T_LED


71 
	#_DEVICE_E7T_LED
 1

	)

73 
	#DEVICE_LED_E7T
 55075

	)

76 
	#GREEN1
 0

	)

77 
	#RED
 2

	)

78 
	#ORANGE
 1

	)

79 
	#GREEN2
 3

	)

81 
	#ON
 1

	)

82 
	#OFF
 0

	)

96 
Àd_öô
();

109 
UID
 
Àd_›í
(
devi˚
,
Àd
);

123 
Àd_˛o£
(
UID
 
id
);

137 
Àd_wrôe_bô
(
UID
 
id
,
BYTE
 
Àd_£t
);

149 
BYTE
 
Àd_ªad_bô
(
UID
 
id
);

	@e7t/devices/segment_driver.c

73 
	~"../../devi˚s/ddf_‰ame.h
"

74 
	~"£gmít_drivî.h
"

76 
	#DEVICE_SEGMENT_E7T
 55090

	)

84 
	#SYSCFG
 0x03ff0000

	)

85 
	#IOPMOD
 ((vﬁ©ûê*)(
SYSCFG
+0x5000))

	)

86 
	#IOPDATA
 ((vﬁ©ûê*)(
SYSCFG
+0x5008))

	)

87 
	#SEG_MASK
 (0x1fc00)

	)

91 
	#SEG_A
 (1<<10)

	)

92 
	#SEG_B
 (1<<11)

	)

93 
	#SEG_C
 (1<<12)

	)

94 
	#SEG_D
 (1<<13)

	)

95 
	#SEG_E
 (1<<14)

	)

96 
	#SEG_F
 (1<<16)

	)

97 
	#SEG_G
 (1<<15)

	)

99 
	#DISP_0
 (
SEG_A
|
SEG_B
|
SEG_C
|
SEG_D
|
SEG_E
|
SEG_F
)

	)

100 
	#DISP_1
 (
SEG_B
|
SEG_C
)

	)

101 
	#DISP_2
 (
SEG_A
|
SEG_B
|
SEG_D
|
SEG_E
|
SEG_G
)

	)

102 
	#DISP_3
 (
SEG_A
|
SEG_B
|
SEG_C
|
SEG_D
|
SEG_G
)

	)

103 
	#DISP_4
 (
SEG_B
|
SEG_C
|
SEG_F
|
SEG_G
)

	)

104 
	#DISP_5
 (
SEG_A
|
SEG_C
|
SEG_D
|
SEG_F
|
SEG_G
)

	)

105 
	#DISP_6
 (
SEG_A
|
SEG_C
|
SEG_D
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

106 
	#DISP_7
 (
SEG_A
|
SEG_B
|
SEG_C
)

	)

107 
	#DISP_8
 (
SEG_A
|
SEG_B
|
SEG_C
|
SEG_D
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

108 
	#DISP_9
 (
SEG_A
|
SEG_B
|
SEG_C
|
SEG_D
|
SEG_F
|
SEG_G
)

	)

110 
	#DISP_A
 (
SEG_A
|
SEG_B
|
SEG_C
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

111 
	#DISP_B
 (
SEG_C
|
SEG_D
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

112 
	#DISP_C
 (
SEG_A
|
SEG_D
|
SEG_E
|
SEG_F
)

	)

113 
	#DISP_D
 (
SEG_B
|
SEG_C
|
SEG_D
|
SEG_E
|
SEG_G
)

	)

114 
	#DISP_E
 (
SEG_A
|
SEG_D
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

115 
	#DISP_F
 (
SEG_A
|
SEG_E
|
SEG_F
|
SEG_G
)

	)

117 
	#ON
 1

	)

118 
	#OFF
 0

	)

125 
	m£g
;

126 
	muid
;

127 } 
	töã∫Æ_£gmít°r
;

133 
öã∫Æ_£gmít°r
 
	gdi•œy
;

137 
	gnumîic_di•œy
 [16] =

139 
DISP_0
,

140 
DISP_1
,

141 
DISP_2
,

142 
DISP_3
,

143 
DISP_4
,

144 
DISP_5
,

145 
DISP_6
,

146 
DISP_7
,

147 
DISP_8
,

148 
DISP_9
,

149 
DISP_A
,

150 
DISP_B
,

151 
DISP_C
,

152 
DISP_D
,

153 
DISP_E
,

154 
DISP_F


157 
£gmít_£t
 (
BYTE
 
£g
);

171 
	$£gmít_öô
 ()

175 *
IOPMOD
 |
SEG_MASK
;

176 *
IOPDATA
 |
SEG_MASK
;

180 
di•œy
.
uid
 = 
NONE
;

181 
di•œy
.
£g
 = 0;

182 
	`£gmít_£t
 (0);

184 
	}
}

199 
UID
 
	$£gmít_›í
(
maj‹
,
ign‹e
)

202 i‡(
maj‹
==
DEVICE_SEGMENT_E7T
)

204 i‡(
di•œy
.
uid
==
NONE
)

206 
di•œy
.
uid
 = 
	`uid_gíî©e
 ();

207  
di•œy
.
uid
;

211  
DEVICE_IN_USE
;

215  
DEVICE_NEXT
;

216 
	}
}

230 
	$£gmít_˛o£
(
UID
 
id
)

232 i‡(
di•œy
.
uid
==
id
)

234 
di•œy
.
uid
 = 
NONE
;

235  
DEVICE_SUCCESS
;

238  
DEVICE_UNKNOWN
;

239 
	}
}

251 
	$£gmít_£tdi•œy
(
d
)

253 *
IOPDATA
 &~
SEG_MASK
;

254 *
IOPDATA
 |
d
;

255 
	}
}

269 
	$£gmít_£t
(
BYTE
 
£g
)

271 i‡(
£g
 <= 0xf )

272 
	`£gmít_£tdi•œy
(
numîic_di•œy
[
£g
]);

274 
	}
}

288 
	$£gmít_wrôe_byã
(
UID
 
id
,
BYTE
 
£g
)

290 i‡(
di•œy
.
uid
==
id
)

292 
di•œy
.
£g
 = seg;

293 
	`£gmít_£t
 (
£g
);

295 
	}
}

307 
BYTE
 
	$£gmít_ªad_byã
(
UID
 
id
)

309 i‡(
di•œy
.
uid
==
id
)

311  
di•œy
.
£g
;

319 
	}
}

	@e7t/devices/segment_driver.h

81 
£gmít_öô
();

94 
UID
 
£gmít_›í
(
devi˚
,
ign‹ed
);

108 
£gmít_˛o£
(
UID
 
id
);

121 
£gmít_wrôe_byã
(
UID
 
id
,
BYTE
 
£gmít
);

133 
BYTE
 
£gmít_ªad_byã
(
UID
 
id
);

	@e7t/devices/serial_driver.c

73 
	~"../../devi˚s/ddf_‰ame.h
"

74 
	~"£rül_drivî.h
"

76 
	#DEVICE_SERIAL_E7T
 55095

	)

82 
	#ON
 1

	)

83 
	#OFF
 0

	)

85 
	#SYSCFG
 (0x03ff0000)

	)

86 
	#UART0_BASE
 (
SYSCFG
 + 0xD000)

	)

87 
	#UART1_BASE
 (
SYSCFG
 + 0xE000)

	)

93 
	#ULCON
 0x00

	)

94 
	#UCON
 0x04

	)

95 
	#USTAT
 0x08

	)

96 
	#UTXBUF
 0x0C

	)

97 
	#URXBUF
 0x10

	)

98 
	#UBRDIV
 0x14

	)

104 
	#ULCR8bôs
 (3)

	)

105 
	#ULCRS1St›Bô
 (0)

	)

106 
	#ULCRNoP¨ôy
 (0)

	)

112 
	#UCRRxM
 (1)

	)

113 
	#UCRRxSI
 (1 << 2)

	)

114 
	#UCRTxM
 (1 << 3)

	)

115 
	#UCRLPB
 (1 << 7)

	)

121 
	#USROvîrun
 (1 << 0)

	)

122 
	#USRP¨ôy
 (1 << 1)

	)

123 
	#USRFømög
 (1 << 2)

	)

124 
	#USRBªak
 (1 << 3)

	)

125 
	#USRDTR
 (1 << 4)

	)

126 
	#USRRxD©a
 (1 << 5)

	)

127 
	#USRTxHﬁdEm±y
 (1 << 6)

	)

128 
	#USRTxEm±y
 (1 << 7)

	)

132 
	#BAUD_9600
 (162 << 4)

	)

138 
	#GET_STATUS
(
p
Ë(*(vﬁ©ûê*)(’Ë+ 
USTAT
))

	)

139 
	#RX_DATA
(
s
Ë((sË& 
USRRxD©a
)

	)

140 
	#GET_CHAR
(
p
Ë(*(vﬁ©ûê*)(’Ë+ 
URXBUF
))

	)

141 
	#TX_READY
(
s
Ë((sË& 
USRTxHﬁdEm±y
)

	)

142 
	#PUT_CHAR
(
p
,
c
Ë(*(*)(’Ë+ 
UTXBUF
Ë()(c))

	)

144 
	#COM1
 (1)

	)

145 
	#COM0
 (0)

	)

153 
	mbaudøã
[2];

154 
	muid
[2];

155 } 
	töã∫Æ_£rül°r
;

161 
öã∫Æ_£rül°r
 
	gnode
;

174 
	$öã∫ÆSîülE7TSëup
(
p‹t
, 
baud
)

177 *(vﬁ©ûê*Ë(
p‹t
 + 
UCON
) = 0;

180 *(vﬁ©ûê*Ë(
p‹t
 + 
ULCON
Ë(
ULCR8bôs
);

183 *(vﬁ©ûê*Ë(
p‹t
 + 
UCON
Ë
UCRRxM
 | 
UCRTxM
;

186 *(vﬁ©ûê*Ë(
p‹t
 + 
UBRDIV
Ë
baud
;

187 
	}
}

200 
	$£rül_öô
()

205 
	`öã∫ÆSîülE7TSëup
(
UART0_BASE
,
BAUD_9600
);

208 
	`öã∫ÆSîülE7TSëup
(
UART1_BASE
,
BAUD_9600
);

212 
node
.
baudøã
[0] = 
BAUD_9600
;

213 
node
.
baudøã
[1] = 
BAUD_9600
;

214 
node
.
uid
[
COM0
] = 
NONE
;

215 
node
.
uid
[
COM1
] = 
NONE
;

216 
	}
}

231 
UID
 
	$£rül_›í
(
maj‹
,
com
)

233 i‡(
maj‹
==
DEVICE_SERIAL_E7T
)

235 i‡(
com
==
COM0
 || com==
COM1
)

237 i‡(
node
.
uid
[
com
]!=
NONE
)

239  
DEVICE_IN_USE
;

243 
node
.
uid
[
com
] = 
	`uid_gíî©e
 ();

244  
node
.
uid
[
com
];

249  
DEVICE_NEXT
;

250 
	}
}

264 
	$£rül_˛o£
(
UID
 
id
)

266 i‡(
node
.
uid
[
COM0
]==
id
)

268 
node
.
uid
[
COM0
] = 
NONE
;

269  
DEVICE_SUCCESS
;

272 i‡(
node
.
uid
[
COM1
]==
id
)

274 
node
.
uid
[
COM1
] = 
NONE
;

275  
DEVICE_SUCCESS
;

278  
DEVICE_UNKNOWN
;

279 
	}
}

294 
	$öã∫Æ_£rül_wrôe
(
p‹t
,
BYTE
 
c
)

296 
	`TX_READY
(
	`GET_STATUS
(
p‹t
))==0){;}

298 
	`PUT_CHAR
(
p‹t
,
c
);

299 
	}
}

313 
	$£rül_wrôe_byã
(
UID
 
id
,
BYTE
 
d©a
)

316 i‡(
node
.
uid
[
COM0
]==
id
)

318 
	`öã∫Æ_£rül_wrôe
 (
UART0_BASE
,
d©a
);

322 i‡(
node
.
uid
[
COM1
]==
id
)

324 
	`öã∫Æ_£rül_wrôe
 (
UART1_BASE
,
d©a
);

328 
	}
}

340 
BYTE
 
	$öã∫Æ_£rül_ªad
(
p‹t
)

343  (
	`RX_DATA
(
	`GET_STATUS
(
p‹t
)))==0 ) {;}

345  
	`GET_CHAR
(
p‹t
);

346 
	}
}

358 
BYTE
 
	$£rül_ªad_byã
(
UID
 
id
)

360 i‡(
node
.
uid
[
COM0
]==
id
)

362  
	`öã∫Æ_£rül_ªad
 (
UART0_BASE
);

365 i‡(
node
.
uid
[
COM1
]==
id
)

367  
	`öã∫Æ_£rül_ªad
 (
UART1_BASE
);

371 
	}
}

	@e7t/devices/serial_driver.h

68 
	#COM1
 (1)

	)

69 
	#COM0
 (0)

	)

82 
£rül_öô
();

97 
UID
 
£rül_›í
(
maj‹
,
com
);

111 
£rül_˛o£
(
UID
 
id
);

126 
öã∫Æ_£rül_wrôe
(
p‹t
,
BYTE
 
c
);

140 
£rül_wrôe_byã
(
UID
 
id
,
BYTE
 
d©a
);

152 
BYTE
 
£rül_ªad_byã
(
UID
 
id
);

	@e7t/events/button_service.c

77 
	~"../../hódîs/≠i_ty≥s.h
"

78 
	~"../../devi˚s/ddf_io.h
"

79 
	~"../devi˚s/ddf_ty≥s.h
"

81 
	~"../devi˚s/Àd_drivî.h
"

83 
	~"swis.h
"

84 
	~"../../hódîs/≠i_devi˚.h
"

86 
	~"../hódîs/ma¸os.h
"

88 
STATE
;

94 
devi˚_åì°r
 *
	gÀdNode
;

95 
UID
 
	gÀdUID
;

107 
	$evítBuâ⁄MaskIrq
(
úq
)

115 *(vﬁ©ûê*)
INTMSK
 |(1<<
úq
);

116 
	}
}

118 
	$evítBuâ⁄UnmaskIrq
(
úq1
,
úq2
)

128 *(vﬁ©ûê*)
INTMSK
 &~((1<<
INT_GLOBAL
)|(1<<
úq1
)|(1<<
úq2
));

129 
	}
}

141 
	$evítBuâ⁄Inô
()

166 *(vﬁ©ûê*)
INTMSK
 &~((1 << 
INT_GLOBAL
) | (1<<10) | (1<<0));

168 *(vﬁ©ûê*)
IOPCON
 |
IO_ENABLE_INT0
;

169 *(vﬁ©ûê*)
IOPCON
 |
IO_ACTIVE_HIGH_INT0
;

170 *(vﬁ©ûê*)
IOPCON
 |
IO_RISING_EDGE_INT0
;

179 
ÀdNode
 = 
	`evítIODevi˚O≥n
(&
ÀdUID
,
DEVICE_LED_E7T
,
GREEN1
);

181 
	}
}

193 
	$evítBuâ⁄Pªs£d
()

195 
BYTE
 
LED1
;

204 
STATE
 = 1;

206 
LED1
 = 
	`evítIODevi˚RódBô
 (
ÀdNode
,
ÀdUID
);

208 i‡(
LED1
==1)

217 
	`evítIODevi˚WrôeBô
 (
ÀdNode
,
ÀdUID
,0);

228 
	`evítIODevi˚WrôeBô
 (
ÀdNode
,
ÀdUID
,1);

231 
STATE
 = 2;

232 
	}
}

244 
	$evítBuâ⁄Sîvi˚
()

254 *(vﬁ©ûê*Ë
INTPND
 &
INT_SW3_MASK
;

263 
	`evítBuâ⁄Pªs£d
();

264 
	}
}

	@e7t/events/button_service.h

82 
evítBuâ⁄Inô
();

94 
evítBuâ⁄Sîvi˚
();

	@e7t/events/event_init.c

71 
	~"buâ⁄_£rvi˚.h
"

91 
	$evítSîvi˚sInô
()

93 
	`evítBuâ⁄Inô
();

94 
	}
}

	@e7t/events/event_init.h

67 
evítSîvi˚sInô
();

	@e7t/events/swi_handler.c

77 
	~"../../c‹e/Æl.h
"

85 
	#SYSTEM
 0x1f

	)

86 
	#SVC
 0x13

	)

87 
	#USER
 0x10

	)

91 
	#IRQoN
 0x40

	)

92 
	#IRQoFF
 0xc0

	)

96 
modifyC⁄åﬁCPSR
();

97 
brögUpSëR8fiq
();

98 
brögUpSëR9fiq
();

99 
brögUpSëR10fiq
();

101 
STATE
;

120 
CÆlBack
 
	$evítsSWIH™dÀr
(
swi_numbî
, 
SwiRegs
 *
r
)

122 
swi_numbî
)

129 
SLOS
:

131 
r
->r[0])

144 
BrögUp_Tø˚
:

146 
r
->r[1])

149 
	`brögUpSëR9fiq
 (
r
->r[2]);

153 
	`brögUpSëR10fiq
 (
r
->r[2]);

159 
BrögUp_F©ÆEº‹
:

160 
	`brögUpSëR8fiq
 (
r
->r[1]);

162 
ÁèÀº‹
: fatalerror;

172 
Evít_IODevi˚Inô
:

173 
	`ioInôülizeDrivîs
 ();

174 
r
->r[0] = 1;

175 
r
->r[1] = 2;

185 i‡(
STATE
!=1)

188 
asm
 volatile ("MSR CPSR_c,#0x5f");

191 
r
->r[0])

194 
Evít_IODevi˚O≥n
:

195 
r
->r[0] = (Ë
	`ioO≥nDrivî
 ((
UID
 *)r->r[1],r->r[2],r->r[3]);

198 
Evít_IODevi˚Clo£
:

199 
r
->r[0] = (Ë
	`ioClo£Drivî
 ((
devi˚_åì°r
 *Ï->r[1],(
UID
)r->r[2]);

202 
Evít_IODevi˚WrôeByã
:

203 
	`ioWrôeByã
 ((
devi˚_åì°r
 *)
r
->r[1],(
UID
Ï->r[2],(
BYTE
)r->r[3]);

206 
Evít_IODevi˚RódByã
:

207 
r
->r[0] = (Ë
	`ioRódByã
 ((
devi˚_åì°r
 *Ï->r[1],(
UID
)r->r[2]);

210 
Evít_IODevi˚WrôeBô
:

211 
	`ioWrôeBô
 ((
devi˚_åì°r
 *)
r
->r[1],(
UID
Ï->r[2],(
UINT
)r->r[3]);

214 
Evít_IODevi˚RódBô
:

215 
r
->r[0] = (Ë
	`ioRódBô
 ((
devi˚_åì°r
 *Ï->r[1],(
UID
)r->r[2]);

218 
Evít_IODevi˚WrôeBlock
:

219 
	`ioWrôeBlock
 ((
devi˚_åì°r
 *)
r
->r[1],(
UID
)r->r[2],(*)r->r[3]);

222 
Evít_IODevi˚RódBlock
:

223 
r
->r[0] = (Ë
	`ioRódBlock
 ((
devi˚_åì°r
 *Ï->r[1],(
UID
)r->r[2]);

228 
asm
 volatile ("MSR CPSR_c,#0xD3");

231  
	`ªp‹tOK
();

232 
	}
}

	@e7t/events/swi_handler_test.c

77 
	~"../../c‹e/Æl.h
"

85 
	#SYSTEM
 0x1f

	)

86 
	#SVC
 0x13

	)

87 
	#USER
 0x10

	)

91 
	#IRQoN
 0x40

	)

92 
	#IRQoFF
 0xc0

	)

96 
modifyC⁄åﬁCPSR
();

97 
brögUpSëR8fiq
();

98 
brögUpSëR9fiq
();

99 
brögUpSëR10fiq
();

101 
STATE
;

119 
	#TEST1
 100

	)

121 
CÆlBack
 
	$evítsSWIH™dÀr
(
swi_numbî
, 
SwiRegs
 *
r
)

123 
swi_numbî
)

125 
SLOS
:

126 
r
->r[0])

132 
TEST1
:

133 
r
->r[0] = 0x1001;

134 
r
->r[1] = 0x2002;

135 
r
->r[2] = 0x3003;

140  
	`ªp‹tOK
();

141 
	}
}

	@e7t/events/swis.h

77 #i‚de‡
SLOS


84 
	#SLOS
 5075

	)

90 
	#Evít_IODevi˚Inô
 0x800

	)

91 
	#Evít_IODevi˚O≥n
 
Evít_IODevi˚Inô
+1

	)

92 
	#Evít_IODevi˚Clo£
 
Evít_IODevi˚Inô
+2

	)

93 
	#Evít_IODevi˚WrôeByã
 
Evít_IODevi˚Inô
+3

	)

94 
	#Evít_IODevi˚RódByã
 
Evít_IODevi˚Inô
+4

	)

95 
	#Evít_IODevi˚WrôeBô
 
Evít_IODevi˚Inô
+5

	)

96 
	#Evít_IODevi˚RódBô
 
Evít_IODevi˚Inô
+6

	)

97 
	#Evít_IODevi˚WrôeBlock
 
Evít_IODevi˚Inô
+7

	)

98 
	#Evít_IODevi˚RódBlock
 
Evít_IODevi˚Inô
+8

	)

104 
	#BrögUp_Ba£
 0x700

	)

105 
	#BrögUp_Tø˚
 
BrögUp_Ba£


	)

106 
	#BrögUp_F©ÆEº‹
 
BrögUp_Ba£
+1

	)

112 
	sSwiRegs


114 
	mr
[13];

115 
	m˝§
;

116 
	mpc
;

117 } 
	tSwiRegs
;

	@e7t/events/tick_service.c

72 
	~"../hódîs/ma¸os.h
"

74 
	~"../../hódîs/≠i_ty≥s.h
"

86 
UINT
 
	gcou¡down
;

114 
	$evítTickInô
 (
UINT
 
m£c
)

123 *
TMOD
 = 0;

124 *
INTPND
 = 0x00000000;

133 
m£c
)

136 
cou¡down
 = 0x000ffff0;

139 
cou¡down
 = 0x00effff0;

142 
	}
}

159 
	#tIOPDATA
 (vﬁ©ûê*)(
SYSCFG
 + 0x5008)

	)

160 
	#LEDBANK
 *
tIOPDATA


	)

163 
	#LED_4_ON
 
LEDBANK
 |0x00000010

	)

164 
	#LED_4_OFF
 
LEDBANK
 = LEDBANK &~ 0x00000010

	)

166 
	gxLED
 = 0;

169 
	$evítTickSîvi˚
()

174 *
INTPND
 = 1<<10;

175 *
TDATA0
 = 
cou¡down
;

177 i‡(
xLED
==0)

179 
LED_4_ON
;

180 
xLED
=1;

184 
LED_4_OFF
;

185 
xLED
=0;

190 *(vﬁ©ûê*)
INTMSK
 &~((1<<
INT_GLOBAL
)|(1<<10)|(1<<0));

191 
	}
}

203 
	$evítTickSèπ
()

205 *
TDATA0
 = 
cou¡down
;

206 *
TMOD
 |= 0x1;

210 *(vﬁ©ûê*)
INTMSK
 &~((1 << 
INT_GLOBAL
) | (1<<10) | (1<<0));

211 
	}
}

	@e7t/events/tick_service.h

99 
evítTickInô
(
UINT
 
m£c
);

111 
evítTickSîvi˚
();

123 
evítTickSèπ
();

	@e7t/headers/all.h

68 #i‚de‡
_HEADERS_E7T_ALL


70 
	#_HEADERS_E7T_ALL
 1

	)

72 
	~"ma¸os.h
"

74 
	~"../devi˚s/£gmít_drivî.h
"

75 
	~"../devi˚s/£rül_drivî.h
"

77 
	~"../evíts/tick_£rvi˚.h
"

78 
	~"../evíts/swis.h
"

	@e7t/headers/macros.h

70 #i‚de‡
SYSCFG


71 
	#SYSCFG
 0x03ff0000

	)

74 
	#IOPMOD
 ((vﬁ©ûê*)(
SYSCFG
+0x5000))

	)

75 
	#IOPCON
 ((vﬁ©ûê*)(
SYSCFG
+0x5004))

	)

77 #i‚de‡
IOPDATA


78 
	#IOPDATA
 (
SYSCFG
+0x5008)

	)

81 
	#INTPND
 ((vﬁ©ûê*)(
SYSCFG
+0x4004))

	)

82 
	#INTMSK
 ((vﬁ©ûê*)(
SYSCFG
+0x4008))

	)

83 
	#INT_GLOBAL
 (21)

	)

85 
	#INT_SW3_MASK
 (1)

	)

87 
	#IO_ENABLE_INT0
 (1<<4)

	)

88 
	#IO_ACTIVE_HIGH_INT0
 (1<<3)

	)

89 
	#IO_RISING_EDGE_INT0
 (1)

	)

91 
	#TMOD
 ((vﬁ©ûê*)(
SYSCFG
+0x6000))

92 
	#TDATA0
 ((vﬁ©ûê*)(
SYSCFG
+0x6004))

	)

93 
	#TCNT0
 ((vﬁ©ûê*)(
SYSCFG
+0x600c))

	)

95 
	#ENABLE_TIMER0
 (1)

	)

96 
	#DISABLE_TIMER0
 (0)

	)

98 
	#TOGGLE_TIMER0
 (1<<1)

	)

99 
	#INIT0_TIMER0
 (1<<2)

	)

103 
	#IRQVe˘‹
 0x18

	)

	@headers/api_device.h

74 
	~"../e7t/evíts/swis.h
"

96 
evítIODevi˚Inô
();

119 
devi˚_åì°r
 *
evítIODevi˚O≥n
(
UID
 *
a
, 
UINT
 
b
, UINT 
c
);

139 
evítIODevi˚Clo£
(
devi˚_åì°r
 *
a
, 
UID
 
b
);

155 
evítIODevi˚WrôeByã
(
devi˚_åì°r
 *
a
, 
UID
 
b
, 
UINT
 
c
);

170 
UINT
 
evítIODevi˚RódByã
(
devi˚_åì°r
 *
a
,
UID
 
b
);

186 
evítIODevi˚WrôeBô
(
devi˚_åì°r
 *
a
,
UID
 
b
,
UINT
 
c
);

201 
UINT
 
evítIODevi˚RódBô
(
devi˚_åì°r
 *,
UID
);

216 
evítIODevi˚WrôeBlock
(
devi˚_åì°r
 *,
UID
,*);

231 *
evítIODevi˚RódBlock
(
devi˚_åì°r
 *
a
, 
UID
 
b
);

	@headers/api_lldebug.h

71 #i‚de‡
LLDEBUG


72 
	#LLDEBUG
 1

	)

74 
	~"../e7t/evíts/swis.h
"

96 
brögUpTø˚
(
UINT
 
a
, 
UID
 
b
);

110 
brögUpF©ÆEº‹
(
UINT
 
a
);

129 
	#ENTRY
 123

	)

130 
	#EXIT
 321

	)

132 
	#Œåa˚bef‹e
(
u
Ë
	`brögUpTø˚
(
ENTRY
,(u))

	)

133 
	#Œåa˚a·î
(
u
Ë
	`brögUpTø˚
(
EXIT
,(u))

	)

135 
	#Œåa˚
(
r
,
u
Ë
	`Œåa˚bef‹e
((u)); \

	)

136 (
	gr
); \

137 
Œåa˚a·î
((
u
))

151 
	#ŒÁèÀº‹
(
e
Ë
	`brögUpF©ÆEº‹
(”))

	)

	@headers/api_types.h

68 #i‚de‡
_HEADERS_API_TYPES


70 
	#_HEADERS_API_TYPES
 1

	)

72 
	tUINT
;

73 
	tUID
;

74 
	tBYTE
;

75 (*
	tCÆlBack
)();

76 
	tBOOL
;

78 
	#TRUE
 0

	)

79 
	#FALSE
 -1

	)

81 
	#DEVICE_SUCCESS
 0

	)

82 
	#DEVICE_IN_USE
 -1

	)

83 
	#DEVICE_UNKNOWN
 -2

	)

84 
	#DEVICE_NEXT
 -3

	)

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@
1
.
1
/usr/include
50
1025
apps/task1_start.c
apps/task1_start.h
apps/task2_start.c
apps/task2_start.h
apps/task3_start.c
apps/task3_start.h
core/all.h
core/cinit.c
core/cli_com.c
core/cli_com.h
core/cli_readline.c
core/cli_readline.h
core/cli_serial.c
core/cli_serial.h
core/cli_shell.c
core/cli_shell.h
core/mutex.c
core/mutex.h
core/swiapi.c
core/uid.c
core/uid.h
devices/ddf_frame.h
devices/ddf_io.c
devices/ddf_io.h
e7t/devices/ddf_tree.h
e7t/devices/ddf_types.h
e7t/devices/led_driver.c
e7t/devices/led_driver.h
e7t/devices/segment_driver.c
e7t/devices/segment_driver.h
e7t/devices/serial_driver.c
e7t/devices/serial_driver.h
e7t/events/button_service.c
e7t/events/button_service.h
e7t/events/event_init.c
e7t/events/event_init.h
e7t/events/swi_handler.c
e7t/events/swi_handler_test.c
e7t/events/swis.h
e7t/events/tick_service.c
e7t/events/tick_service.h
e7t/headers/all.h
e7t/headers/macros.h
headers/api_device.h
headers/api_lldebug.h
headers/api_types.h
/usr/include/assert.h
/usr/include/time.h
/usr/include/features.h
/usr/include/xlocale.h
